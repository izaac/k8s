---
- name: dnf/yum update
  shell: |
    dnf update -y

- name: Def CRI-O modules and sysctl
  shell: |
    cat <<EOF | sudo tee /etc/modules-load.d/crio.conf
    overlay
    br_netfilter
    EOF
    sudo modprobe overlay
    sudo modprobe br_netfilter
    cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
    net.bridge.bridge-nf-call-iptables  = 1
    net.ipv4.ip_forward                 = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    EOF
    sudo sysctl --system

- name: Install CRI-O binary and daemon
  shell: |
    sudo sed -i 's/^SELINUX=enforcing$/SELINUX=disabled/' /etc/selinux/config
    export VERSION=1.20
    sudo dnf -y module enable cri-o:$VERSION
    sudo dnf -y install cri-o

- name: Changing CRIO conmon_cgroup and cgroup crio.conf
  shell: |
    sudo sed -i 's/conmon_cgroup = "system.slice"/conmon_cgroup = "pod"/g' /etc/crio/crio.conf
    sudo sed -i 's/cgroup_manager = "systemd"/cgroup_manager = "cgroupfs"/g' /etc/crio/crio.conf
    sudo systemctl daemon-reload
    sudo systemctl enable crio --now

- name: Install k8s dameon and binary
  shell: |
    cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
    br_netfilter
    EOF
    cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
    net.bridge.bridge-nf-call-ip6tables = 1
    net.bridge.bridge-nf-call-iptables = 1
    EOF
    sudo sysctl --system
    cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
    [kubernetes]
    name=Kubernetes
    baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
    enabled=1
    gpgcheck=1
    repo_gpgcheck=1
    gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    exclude=kubelet kubeadm kubectl
    EOF
    dnf update -y
    dnf install -y kubelet-1.20.5-0.x86_64 kubeadm-1.20.5-0.x86_64 kubectl-1.20.5-0.x86_64 --disableexcludes=kubernetes
    sudo systemctl enable --now kubelet

- name: Modifying kernel 
  register: kernel_result
  shell: |
    sudo grubby --update-kernel=ALL --args="systemd.unified_cgroup_hierarchy=0"

- name: Reboot if kernel modified
  when: kernel_result is changed
  async: 1
  poll: 0
  shell: |
    sleep 5 && reboot

- name: Wait for the reboot to complete if there was a change.
  when: kernel_result is changed
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 300

- name: kubeadm init
  shell: |
    kubeadm init

- name: copy k8s config to user fedora
  shell: |
    sudo mkdir /home/fedora/.kube
    sudo cp /etc/kubernetes/admin.conf /home/fedora/.kube/config
    sudo chown -R fedora: /home/fedora/.kube