# kubectl create secret generic aws-s3 --from-literal=*** --from-literal=AWS_SECRET_ACCESS_KEY=*** -n longhorn-system
# s3://<your-bucket-name>@<your-aws-region>/  || s3://lprates-lab@us-east-1/longhorn-backups/
apiVersion: longhorn.io/v1beta1
kind: Volume
metadata:
  labels:
    longhornvolume: vol01
    recurring-job-group.longhorn.io/default: enabled
  name: vol01
  namespace: longhorn-system
spec:
  Standby: false
  accessMode: rwo
  backingImage: ""
  baseImage: ""
  dataLocality: disabled
  dataSource: ""
  disableFrontend: false
  diskSelector: []
  encrypted: false
  engineImage: rancher/mirrored-longhornio-longhorn-engine:v1.2.4
  fromBackup: ""
  frontend: blockdev
  lastAttachedBy: ""
  migratable: false
  migrationNodeID: ""
  nodeID: ""
  nodeSelector: []
  numberOfReplicas: 3
  replicaAutoBalance: ignored
  revisionCounterDisabled: false
  size: "2147483648"
  staleReplicaTimeout: 20
---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/bound-by-controller: "yes"
  name: pv01
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 2Gi
  claimRef:
    apiVersion: v1
    kind: PersistentVolumeClaim
    name: pvc01
    namespace: default
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeAttributes:
      diskSelector: ""
      nodeSelector: ""
      numberOfReplicas: "3"
      staleReplicaTimeout: "20"
    volumeHandle: vol01
  persistentVolumeReclaimPolicy: Retain
  storageClassName: longhorn-static
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc01
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: longhorn-static
  volumeMode: Filesystem
  volumeName: pv01
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:                                                                                                                                                                                                          
    workload.user.cattle.io/workloadselector: apps.deployment-default-web-first
  name: web-first
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-default-web-first
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-default-web-first
    spec:
      containers:
      - image: leonardoalvesprates/web-first:v0.1
        imagePullPolicy: Always
        name: container-0
        ports:
        - containerPort: 8080
          name: port
          protocol: TCP
        volumeMounts:
        - mountPath: /data
          name: vol01
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vol01
        persistentVolumeClaim:
          claimName: pvc01